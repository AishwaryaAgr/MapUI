{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\aishw\\\\Desktop\\\\MapUp\\\\mapui\\\\src\\\\Components\\\\Inputs.js\";\n\n/** @format */\nimport React from \"react\";\n\nconst Input = ({\n  setAddress,\n  setCountry,\n  world\n}) => {\n  //? Setting country API and data using hooks ---------\n  //? Input country Data Start ------------------------------------------------------\n  const india = {\n    cname: \"India\",\n    cheight: \"65%\",\n    cflag: \"https://upload.wikimedia.org/wikipedia/en/thumb/4/41/Flag_of_India.svg/1200px-Flag_of_India.svg.png\",\n    ccurrency: \"Rupees\",\n    cspeed: \"km/hr\",\n    cdistance: \"meter\",\n    cvolume: \"litre\",\n    cweight: \"gram\",\n    ctime: \"IST\"\n  };\n  const uk = {\n    cname: \"UK\",\n    cheight: \"65%\",\n    cflag: \"https://upload.wikimedia.org/wikipedia/en/thumb/a/ae/Flag_of_the_United_Kingdom.svg/1200px-Flag_of_the_United_Kingdom.svg.png\",\n    ccurrency: \"Sterling\",\n    cspeed: \"mph\",\n    cdistance: \"meter\",\n    cvolume: \"gallons\",\n    cweight: \"pound\",\n    ctime: \"GMT\"\n  };\n  const usa = {\n    cname: \"USA\",\n    cheight: \"65%\",\n    cflag: \"https://upload.wikimedia.org/wikipedia/en/thumb/a/a4/Flag_of_the_United_States.svg/1200px-Flag_of_the_United_States.svg.png\",\n    ccurrency: \"Dollar\",\n    cspeed: \"mph\",\n    cdistance: \"yard\",\n    cvolume: \"ounces\",\n    cweight: \"pound\",\n    ctime: \"EST\"\n  }; //? Input Country Data End -------------------------------------------------------------\n\n  const func = place => {\n    //? Handling all the Data and API by setting it to the state corresponding to selection -----\n    if (place === \"0\") {\n      console.log(\"World\");\n      setAddress(`https://www.openstreetmap.org/export/embed.html?bbox=-220.4296875%2C-39.90973623453719%2C171.91406250000003%2C84.26717240431665&amp;layer=cyclemap`); //? Setting API -----------------------------------------------------------------\n\n      setCountry(world); //? Setting Card data -----------------------------------------------\n    } else if (place === \"1\") {\n      console.log(\"India\");\n      setAddress(`https://www.openstreetmap.org/export/embed.html?bbox=65.96191406250001%2C8.754794702435618%2C99.62402343750001%2C33.578014746144014&amp;layer=cyclemap`);\n      setCountry(india);\n    } else if (place === \"2\") {\n      console.log(\"UK\");\n      setAddress(`https://www.openstreetmap.org/export/embed.html?bbox=-12.458496093750002%2C49.97948776108648%2C4.372558593750001%2C57.868131763328826&amp;layer=cyclemap`);\n      setCountry(uk);\n    } else {\n      console.log(\"USA\");\n      setAddress(`https://www.openstreetmap.org/export/embed.html?bbox=-206.54296875000003%2C11.350796722383672%2C-10.371093750000002%2C75.71563324165896&amp;layer=cyclemap`);\n      setCountry(usa);\n    }\n  };\n\n  let curr = \"0\"; //? So that only the latest selection gets called on pressing load ------------\n\n  return (\n    /*#__PURE__*/\n    //? button and select tag formatting ------------------------------------------------\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        style: {\n          height: \"30px\",\n          width: \"100px\",\n          zIndex: \"4\",\n          position: \"absolute\",\n          top: \"10vh\",\n          left: \"54vw\",\n          borderRadius: \"8px\",\n          outline: \"none\"\n        },\n        onClick: () => {\n          func(curr); //? \n        },\n        children: \"Load\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"btn\",\n        style: {\n          height: \"30px\",\n          width: \"100px\",\n          zIndex: \"4\",\n          position: \"absolute\",\n          top: \"10vh\",\n          left: \"46vw\",\n          borderRadius: \"8px\",\n          outline: \"none\",\n          defaultValue: \"World\"\n        },\n        onChange: e => {\n          curr = e.target.value;\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"India\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2\",\n          children: \"UK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"3\",\n          children: \"USA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          selected: true,\n          value: \"0\",\n          children: \"World\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true)\n  );\n};\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["C:/Users/aishw/Desktop/MapUp/mapui/src/Components/Inputs.js"],"names":["React","Input","setAddress","setCountry","world","india","cname","cheight","cflag","ccurrency","cspeed","cdistance","cvolume","cweight","ctime","uk","usa","func","place","console","log","curr","height","width","zIndex","position","top","left","borderRadius","outline","defaultValue","e","target","value"],"mappings":";;;;AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,UAAd;AAA0BC,EAAAA;AAA1B,CAAD,KAAsC;AAAE;AACtD;AACC,QAAMC,KAAK,GAAG;AACbC,IAAAA,KAAK,EAAE,OADM;AAEbC,IAAAA,OAAO,EAAE,KAFI;AAGbC,IAAAA,KAAK,EACJ,qGAJY;AAKbC,IAAAA,SAAS,EAAE,QALE;AAMbC,IAAAA,MAAM,EAAE,OANK;AAObC,IAAAA,SAAS,EAAE,OAPE;AAQbC,IAAAA,OAAO,EAAE,OARI;AASbC,IAAAA,OAAO,EAAE,MATI;AAUbC,IAAAA,KAAK,EAAE;AAVM,GAAd;AAYA,QAAMC,EAAE,GAAG;AACVT,IAAAA,KAAK,EAAE,IADG;AAEVC,IAAAA,OAAO,EAAE,KAFC;AAGVC,IAAAA,KAAK,EACJ,+HAJS;AAKVC,IAAAA,SAAS,EAAE,UALD;AAMVC,IAAAA,MAAM,EAAE,KANE;AAOVC,IAAAA,SAAS,EAAE,OAPD;AAQVC,IAAAA,OAAO,EAAE,SARC;AASVC,IAAAA,OAAO,EAAE,OATC;AAUVC,IAAAA,KAAK,EAAE;AAVG,GAAX;AAYA,QAAME,GAAG,GAAG;AACXV,IAAAA,KAAK,EAAE,KADI;AAEXC,IAAAA,OAAO,EAAE,KAFE;AAGXC,IAAAA,KAAK,EACJ,6HAJU;AAKXC,IAAAA,SAAS,EAAE,QALA;AAMXC,IAAAA,MAAM,EAAE,KANG;AAOXC,IAAAA,SAAS,EAAE,MAPA;AAQXC,IAAAA,OAAO,EAAE,QARE;AASXC,IAAAA,OAAO,EAAE,OATE;AAUXC,IAAAA,KAAK,EAAE;AAVI,GAAZ,CA1BmD,CAsCpD;;AACC,QAAMG,IAAI,GAAGC,KAAK,IAAI;AAAE;AAEvB,QAAIA,KAAK,KAAK,GAAd,EAAkB;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAlB,MAAAA,UAAU,CACR,oJADQ,CAAV,CAFiB,CAIf;;AACFC,MAAAA,UAAU,CAACC,KAAD,CAAV,CALiB,CAKE;AACnB,KAND,MAOK,IAAIc,KAAK,KAAK,GAAd,EAAkB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAlB,MAAAA,UAAU,CACR,wJADQ,CAAV;AAGAC,MAAAA,UAAU,CAACE,KAAD,CAAV;AACA,KANI,MAOA,IAAIa,KAAK,KAAK,GAAd,EAAkB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAlB,MAAAA,UAAU,CACR,0JADQ,CAAV;AAGAC,MAAAA,UAAU,CAACY,EAAD,CAAV;AACA,KANI,MAOD;AACHI,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAlB,MAAAA,UAAU,CACR,4JADQ,CAAV;AAGAC,MAAAA,UAAU,CAACa,GAAD,CAAV;AACA;AAED,GA/BD;;AAiCA,MAAIK,IAAI,GAAC,GAAT,CAxEmD,CAwErC;;AACd;AAAA;AAAS;AACR;AAAA,8BACC;AACC,QAAA,SAAS,EAAC,KADX;AAEC,QAAA,KAAK,EAAE;AACNC,UAAAA,MAAM,EAAE,MADF;AAENC,UAAAA,KAAK,EAAE,OAFD;AAGNC,UAAAA,MAAM,EAAE,GAHF;AAINC,UAAAA,QAAQ,EAAE,UAJJ;AAKNC,UAAAA,GAAG,EAAE,MALC;AAMNC,UAAAA,IAAI,EAAE,MANA;AAONC,UAAAA,YAAY,EAAE,KAPR;AAQNC,UAAAA,OAAO,EAAE;AARH,SAFR;AAYC,QAAA,OAAO,EAAE,MAAM;AACdZ,UAAAA,IAAI,CAACI,IAAD,CAAJ,CADc,CACF;AACZ,SAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAkBC;AACC,QAAA,SAAS,EAAC,KADX;AAEC,QAAA,KAAK,EAAE;AACNC,UAAAA,MAAM,EAAE,MADF;AAENC,UAAAA,KAAK,EAAE,OAFD;AAGNC,UAAAA,MAAM,EAAE,GAHF;AAINC,UAAAA,QAAQ,EAAE,UAJJ;AAKNC,UAAAA,GAAG,EAAE,MALC;AAMNC,UAAAA,IAAI,EAAE,MANA;AAONC,UAAAA,YAAY,EAAE,KAPR;AAQNC,UAAAA,OAAO,EAAE,MARH;AASNC,UAAAA,YAAY,EAAE;AATR,SAFR;AAaC,QAAA,QAAQ,EAAGC,CAAD,IAAO;AAChBV,UAAAA,IAAI,GAAGU,CAAC,CAACC,MAAF,CAASC,KAAhB;AACA,SAfF;AAAA,gCAgBC;AAAQ,UAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBD,eAiBC;AAAQ,UAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBD,eAkBC;AAAQ,UAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBD,eAmBC;AAAQ,UAAA,QAAQ,MAAhB;AAAiB,UAAA,KAAK,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBD;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBD;AAAA;AADD;AA4CA,CArHD;;KAAMhC,K;AAuHN,eAAeA,KAAf","sourcesContent":["/** @format */\r\n\r\nimport React from \"react\";\r\n\r\nconst Input = ({ setAddress, setCountry, world}) => { //? Setting country API and data using hooks ---------\r\n//? Input country Data Start ------------------------------------------------------\r\n\tconst india = {\r\n\t\tcname: \"India\",\r\n\t\tcheight: \"65%\",\r\n\t\tcflag:\r\n\t\t\t\"https://upload.wikimedia.org/wikipedia/en/thumb/4/41/Flag_of_India.svg/1200px-Flag_of_India.svg.png\",\r\n\t\tccurrency: \"Rupees\",\r\n\t\tcspeed: \"km/hr\",\r\n\t\tcdistance: \"meter\",\r\n\t\tcvolume: \"litre\",\r\n\t\tcweight: \"gram\",\r\n\t\tctime: \"IST\",\r\n\t};\r\n\tconst uk = {\r\n\t\tcname: \"UK\",\r\n\t\tcheight: \"65%\",\r\n\t\tcflag:\r\n\t\t\t\"https://upload.wikimedia.org/wikipedia/en/thumb/a/ae/Flag_of_the_United_Kingdom.svg/1200px-Flag_of_the_United_Kingdom.svg.png\",\r\n\t\tccurrency: \"Sterling\",\r\n\t\tcspeed: \"mph\",\r\n\t\tcdistance: \"meter\",\r\n\t\tcvolume: \"gallons\",\r\n\t\tcweight: \"pound\",\r\n\t\tctime: \"GMT\",\r\n\t};\r\n\tconst usa = {\r\n\t\tcname: \"USA\",\r\n\t\tcheight: \"65%\",\r\n\t\tcflag:\r\n\t\t\t\"https://upload.wikimedia.org/wikipedia/en/thumb/a/a4/Flag_of_the_United_States.svg/1200px-Flag_of_the_United_States.svg.png\",\r\n\t\tccurrency: \"Dollar\",\r\n\t\tcspeed: \"mph\",\r\n\t\tcdistance: \"yard\",\r\n\t\tcvolume: \"ounces\",\r\n\t\tcweight: \"pound\",\r\n\t\tctime: \"EST\",\r\n\t};\r\n//? Input Country Data End -------------------------------------------------------------\r\n\tconst func = place => { //? Handling all the Data and API by setting it to the state corresponding to selection -----\r\n\t\t\r\n\t\tif (place === \"0\"){\r\n\t\t\tconsole.log(\"World\");\r\n\t\t\tsetAddress(\r\n\t\t\t\t`https://www.openstreetmap.org/export/embed.html?bbox=-220.4296875%2C-39.90973623453719%2C171.91406250000003%2C84.26717240431665&amp;layer=cyclemap`\r\n\t\t\t);//? Setting API -----------------------------------------------------------------\r\n\t\t\tsetCountry(world); //? Setting Card data -----------------------------------------------\r\n\t\t}\r\n\t\telse if (place === \"1\"){\r\n\t\t\tconsole.log(\"India\");\r\n\t\t\tsetAddress(\r\n\t\t\t\t`https://www.openstreetmap.org/export/embed.html?bbox=65.96191406250001%2C8.754794702435618%2C99.62402343750001%2C33.578014746144014&amp;layer=cyclemap`\r\n\t\t\t);\r\n\t\t\tsetCountry(india);\r\n\t\t}\r\n\t\telse if (place === \"2\"){\r\n\t\t\tconsole.log(\"UK\");\r\n\t\t\tsetAddress(\r\n\t\t\t\t`https://www.openstreetmap.org/export/embed.html?bbox=-12.458496093750002%2C49.97948776108648%2C4.372558593750001%2C57.868131763328826&amp;layer=cyclemap`\r\n\t\t\t);\r\n\t\t\tsetCountry(uk);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tconsole.log(\"USA\");\r\n\t\t\tsetAddress(\r\n\t\t\t\t`https://www.openstreetmap.org/export/embed.html?bbox=-206.54296875000003%2C11.350796722383672%2C-10.371093750000002%2C75.71563324165896&amp;layer=cyclemap`\r\n\t\t\t);\r\n\t\t\tsetCountry(usa);\r\n\t\t}\r\n\t\t\r\n\t};\r\n\t\r\n\tlet curr=\"0\"; //? So that only the latest selection gets called on pressing load ------------\r\n\treturn ( //? button and select tag formatting ------------------------------------------------\r\n\t\t<>\r\n\t\t\t<button\r\n\t\t\t\tclassName='btn'\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\theight: \"30px\",\r\n\t\t\t\t\twidth: \"100px\",\r\n\t\t\t\t\tzIndex: \"4\",\r\n\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\ttop: \"10vh\",\r\n\t\t\t\t\tleft: \"54vw\",\r\n\t\t\t\t\tborderRadius: \"8px\",\r\n\t\t\t\t\toutline: \"none\",\r\n\t\t\t\t}}\r\n\t\t\t\tonClick={() => {\r\n\t\t\t\t\tfunc(curr); //? \r\n\t\t\t\t}}>\r\n\t\t\t\tLoad\r\n\t\t\t</button>\r\n\t\t\t<select\r\n\t\t\t\tclassName='btn'\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\theight: \"30px\",\r\n\t\t\t\t\twidth: \"100px\",\r\n\t\t\t\t\tzIndex: \"4\",\r\n\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\ttop: \"10vh\",\r\n\t\t\t\t\tleft: \"46vw\",\r\n\t\t\t\t\tborderRadius: \"8px\",\r\n\t\t\t\t\toutline: \"none\",\r\n\t\t\t\t\tdefaultValue: \"World\",\r\n\t\t\t\t}}\r\n\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\tcurr = e.target.value;\r\n\t\t\t\t}}>\r\n\t\t\t\t<option value='1'>India</option>\r\n\t\t\t\t<option value='2'>UK</option>\r\n\t\t\t\t<option value='3'>USA</option>\r\n\t\t\t\t<option selected value='0'>\r\n\t\t\t\t\tWorld\r\n\t\t\t\t</option>\r\n\t\t\t</select>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Input;\r\n"]},"metadata":{},"sourceType":"module"}